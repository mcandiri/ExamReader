<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <form id="fileUploadForm" method="post" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="answerKeyUpload" class="form-label">Upload Answer Key:</label>
                            <input type="file" class="form-control" id="answerKeyUpload" name="answerKeyUpload" required />
                        </div>
                        <div class="mb-3">
                            <label for="studentAnswersUpload" class="form-label">Upload Student Answers:</label>
                            <input type="file" class="form-control" id="studentAnswersUpload" name="studentAnswersUpload" required disabled />
                        </div>
                        <button type="submit" class="btn btn-primary" disabled>Upload</button>
                    </form>
                    <progress id="uploadProgress" value="0" max="100" style="width:100%;" class="progress-bar"></progress>
                    <p id="uploadStatus" class="mt-2"></p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card" id="resultsCard" style="visibility:hidden;">
                <div class="card-body" id="uploadResults">
                </div>
            </div>
        </div>
    </div>
</div>




<script>function checkFilesAndEnableSubmit() {
        const answerKeyInput = document.getElementById('answerKeyUpload');
        const studentAnswersInput = document.getElementById('studentAnswersUpload');
        const submitButton = document.querySelector('button[type="submit"]');

        if (answerKeyInput.files.length > 0 && studentAnswersInput.files.length > 0) {
            submitButton.disabled = false;
        } else {
            submitButton.disabled = true;
        }
    }

    document.getElementById('answerKeyUpload').addEventListener('change', function () {
        const studentAnswersInput = document.getElementById('studentAnswersUpload');
        studentAnswersInput.disabled = false;

        checkFilesAndEnableSubmit();
    });

    document.getElementById('studentAnswersUpload').addEventListener('change', function () {

        checkFilesAndEnableSubmit();
    });

    document.getElementById('fileUploadForm').addEventListener('submit', function (e) {
        e.preventDefault();
        resetUploadStatus();

        const answerKeyInput = document.getElementById('answerKeyUpload');
        const studentAnswersInput = document.getElementById('studentAnswersUpload');
        const formData = new FormData(this);
        formData.append('answerKeyFile', answerKeyInput.files[0]);
        formData.append('studentAnswersFile', studentAnswersInput.files[0]);

        const xhr = new XMLHttpRequest();
        xhr.open('POST', '/Home/Upload', true);

        xhr.upload.onprogress = function (e) {
            if (e.lengthComputable) {
                const percentComplete = (e.loaded / e.total) * 100;
                document.getElementById('uploadProgress').value = percentComplete;
                updateUploadStatus(Math.round(percentComplete) + '% uploaded', true);
            }
        };

        xhr.onload = function () {
            if (xhr.status === 200) {
                const response = JSON.parse(xhr.responseText);
                if (response.success) {
                    document.getElementById('uploadProgress').value = 100; 
                    updateUploadStatus('Upload complete. Processing...', true);
                    startProcessing(response); 
                } else {
                    updateUploadStatus(response.message, false);
                }
            } else {
                updateUploadStatus('An error occurred during upload.', false);
            }
        };

        xhr.send(formData);
    });

    function startProcessing(response) {
        let progress = 0;
        const interval = setInterval(() => {
            progress += 10;
            document.getElementById('uploadProgress').value = progress;
            updateUploadStatus(`Processing ${progress}%...`, true);

            if (progress >= 100) {
                clearInterval(interval);
                document.getElementById('uploadProgress').value = 100; 
                updateUploadStatus('Processing complete. Displaying results...', false);
                displayResults(response); 
            }
        }, 100); 
    }

    function resetUploadStatus() {
        document.getElementById('uploadProgress').value = 0;
        document.getElementById('uploadStatus').innerText = '';
        document.getElementById('uploadResults').innerHTML = '';
    }

    function displayResults(response) {
        const results = response.results;
        let resultsHtml = `<p>Correct Answers: ${results.correctCount} (${Object.keys(results.correctAnswers).join(", ")})</p>
                       <p>Incorrect Answers: ${results.incorrectCount} (${Object.keys(results.incorrectAnswers).join(", ")})</p>
                       <p>Unanswered or Unreadable: ${results.unansweredCount} (${results.unansweredQuestions.join(", ")})</p>`;

        const answerKeys = Object.entries(results.answerKey);
        const half = Math.ceil(answerKeys.length / 2);
        const firstHalf = answerKeys.slice(0, half);
        const secondHalf = answerKeys.slice(half);

        // First column
        resultsHtml += `<div class="row">
                      <div class="col-sm-6"><p>Answer Key:</p><ul>`;
        for (const [question, answer] of firstHalf) {
            resultsHtml += `<li>Question ${question}: ${answer}</li>`;
        }
        resultsHtml += `</ul></div>`;

        // Second column
        resultsHtml += `<div class="col-sm-6"><p>Answer Key:</p><ul>`;
        for (const [question, answer] of secondHalf) {
            resultsHtml += `<li>Question ${question}: ${answer}</li>`;
        }
        resultsHtml += `</ul></div></div>`;

        document.getElementById('uploadResults').innerHTML = resultsHtml;
        document.getElementById('resultsCard').style.visibility = 'visible';
        updateUploadStatus('Processing complete!', false);
    }



    //function displayResults(response) {
    //    const results = response.results;
    //    let resultsHtml = `<p>Correct Answers: ${results.correctCount} (${Object.keys(results.correctAnswers).join(", ")})</p>
    //                   <p>Incorrect Answers: ${results.incorrectCount} (${Object.keys(results.incorrectAnswers).join(", ")})</p>
    //                   <p>Unanswered or Unreadable: ${results.unansweredCount} (${results.unansweredQuestions.join(", ")})</p>`;

    //    resultsHtml += "<p>Answer Key:</p><ul>";
    //    for (const [question, answer] of Object.entries(results.answerKey)) {
    //        resultsHtml += `<li>Question ${question}: ${answer}</li>`;
    //    }
    //    resultsHtml += "</ul>";

    //    document.getElementById('uploadResults').innerHTML = resultsHtml;
    //    updateUploadStatus('Processing complete!', false);
    //}


    function updateUploadStatus(message, isUploading) {
        document.getElementById('uploadStatus').innerText = message;
        if (!isUploading) {
            document.getElementById('uploadProgress').value = 0;
        }
    }</script>
